# Dockerfile.render

# 1) Build Stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build

# 1.a) Copy & restore just the host project for caching
WORKDIR /app/BlazorIW
COPY BlazorIW/BlazorIW.csproj ./
RUN dotnet restore

# 1.b) Bring in the rest of your source
WORKDIR /app
COPY . .

# 1.c) Install the Blazor/WASM linker & Python
RUN dotnet workload install wasm-tools \
 && apt-get update \
 && apt-get install -y python3 \
 && ln -sf /usr/bin/python3 /usr/bin/python \
 && rm -rf /var/lib/apt/lists/*

# 1.d) Publish (with implicit restore)
WORKDIR /app/BlazorIW
RUN dotnet publish \
    -c Release \
    -o ../out \
    -v q

# 2) Runtime Stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0
WORKDIR /app

COPY --from=build /app/out .

EXPOSE 8080
ENV ASPNETCORE_URLS=http://+:8080
ENTRYPOINT ["dotnet", "BlazorIW.dll"]
