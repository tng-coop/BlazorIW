# 1) Build Stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build

# 1.a) Copy & restore just the host project for caching
WORKDIR /app/BlazorIW
COPY BlazorIW/BlazorIW.csproj ./
RUN dotnet restore

# 1.b) Bring in the rest of your source
WORKDIR /app
COPY . .

# 1.c) Install the Blazor/WASM linker & Python
RUN dotnet workload install wasm-tools \
 && apt-get update \
 && apt-get install -y python3 \
 && ln -sf /usr/bin/python3 /usr/bin/python \
 && rm -rf /var/lib/apt/lists/*

# 1.d) Publish (with implicit restore)
WORKDIR /app/BlazorIW
#RUN dotnet publish -c Release -o ../out -v q
RUN dotnet publish -c Debug -o ../out -v q

# 2) Runtime Stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime
WORKDIR /app

# Copy published output
COPY --from=build /app/out .

# Use Render's PORT env var (default 8080) for listening
ARG PORT=8080
ENV PORT=${PORT}
EXPOSE ${PORT}
ENV ASPNETCORE_URLS=http://+:${PORT}

# Enable development mode & detailed errors (temporarily)
ENV ASPNETCORE_ENVIRONMENT=Development
ENV ASPNETCORE_DETAILEDERRORS=true
ENV DOTNET_EnableDiagnostics=1

# Start the Blazor host
ENTRYPOINT ["dotnet", "BlazorIW.dll"]