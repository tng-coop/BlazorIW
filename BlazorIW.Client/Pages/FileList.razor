@page "/files"

<PageTitle>File List</PageTitle>

@inject BlazorIW.Client.Services.FileService FileService

<h1>Files under wwwroot</h1>

@if (files == null)
{
    <p>Loading...</p>
}
else if (!files.Any())
{
    <p>No files found.</p>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="StartAssessment" disabled="@isAssessing">Start Assessment</button>
    <table class="table">
        <thead>
            <tr>
                <th>Path</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var file in files)
            {
                <tr>
                    <td>@file.Path</td>
                    <td>@file.Status</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<FileStatusInfo>? files;
    private bool isAssessing;

    protected override async Task OnInitializedAsync()
    {
        var fileData = await FileService.GetFilesAsync();
        files = fileData
            .Select(f => new FileStatusInfo(f.Path, "Not checked"))
            .ToList();
    }

    private async Task StartAssessment()
    {
        if (files is null)
        {
            return;
        }

        isAssessing = true;

        foreach (var file in files)
        {
            file.Status = "Checking...";
            StateHasChanged();
            var ok = await FileService.IsFileAccessibleAsync(file.Path);
            file.Status = ok ? "Accessible" : "Unavailable";
            StateHasChanged();
        }

        isAssessing = false;
    }

    private class FileStatusInfo
    {
        public string Path { get; set; }
        public string Status { get; set; }

        public FileStatusInfo(string path, string status)
        {
            Path = path;
            Status = status;
        }
    }
}
